/**继承 Inheritance
 * 
 * 继承的实现
 * 
 * 继承的限制
 * 	1、在java中只允许单继承
 * 		一个Class不能同时继承多个Class，但是可以链状单继承（多层继承）
 * 		一个Class可一被多个Class继承
 * 	2、子类不能直接访问父类的私有成员
 * 		解决方法：通过public的getter和setter来访问父类的私有成员
 * 
 * 子类对象的实例化过程
 * 	1、在子类对象实例化之前，必须先调用父类中的构造方法，之后调用子类构造方法
 * 
 * 方法的重写
 * 	1、在继承中，也存在着重写的概念，其实就是子类定义了和父类同名的方法
 * 	2、定义：方法名称相同，返回值类型相同，参数也相同0.0
 * 	3、重写的限制：被子类重写的方法不能拥有比父类方法更加严格的访问权限
 * 	4、访问权限：private<default<public
 * 
 * super关键字
 * 	1、强行调用父类的方法执行
 * 	2、super不一定在重写中使用，也可以表示那些方法时从父类中继承而来的
 * 	2、super()代表父类的构造方法，是默认包含在子类的构造方法中的，不用手动添加
 * 
 * 	疑问：多层继承的时候如何分层强制调用？
 * 
 * 【重写与重载的区别】重要！
 * 		重载 							重写
 * 单词 	overloading 				overriding
 * 定义 	方法名称相同，参数的类型或个数不同 	方法名称、参数的类型、返回值类型全部相同
 * 		对权限没有要求 					被重写的方法不能拥有比父类更加严格的权限
 * 范围 	发生在一个Class中 				发生在继承中
 */
/**
 * @author Qiufan
 *
 */
package com.javabasis.ch13inheritance;